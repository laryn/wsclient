<?php
// $Id$

/**
 * @file
 * Web service client examples module.
 */

/**
 * Implements hook_default_wsclient_service().
 */
function wsclient_examples_default_wsclient_service() {
  // Google Translate service (REST)
  $service = new WSClientServiceDescription();
  $service->name = 'google';
  $service->label = 'Google Ajax APIs';
  $service->url = 'http://ajax.googleapis.com/ajax/services/';
  $service->type = 'rest';

  // Add info about the REST service, which the user has to provide via the UI.
  $service->datatypes = array(
    'translation_result' => array(
      'label' => 'Translation result',
      'property info' => array(
        'responseData' => array(
          'type' => 'struct',
          'label' => 'Response data',
          'property info' => array(
            'translatedText' => array(
              'type' => 'text',
              'label' => 'Translated text',
            ),
          ),
        ),
      ),
    ),
  );
  $operation['label'] = 'Translate text';
  $operation['url'] = 'language/translate';
  $operation['parameter']['q'] = array('type' => 'text', 'label' => 'Text');
  $operation['parameter']['langpair'] = array(
    'type' => 'text',
    'label' => 'Language pair',
    'description' => 'The language pair used for translating, such as de|en.',
  );
  // We have to specify the version 1.0
  $operation['parameter']['v'] = array('type' => 'hidden', 'default value' => '1.0');
  $operation['result'] = array('type' => 'wsclient_google_translation_result', 'label' => 'Translation result');
  $service->operations['translate'] = $operation;
  $services[$service->name] = $service;

  // Geocoder.us service (SOAP)
  $service = new WSClientServiceDescription();
  $service->name = 'geocoder';
  $service->label = 'Geocoder.us';
  $service->url = 'http://geocoder.us/dist/eg/clients/GeoCoderPHP.wsdl';
  $service->type = 'soap';

  // Add info about the SOAP service, which the user has to provide via the UI.
  $service->datatypes = array(
    'geocoder_result' => array(
      'label' => 'Address results',
      'property info' => array(
        'number' => array('type' => 'integer'),
        'zip' => array('type' => 'integer'),
        'suffix' => array('type' => 'text'),
        'prefix' => array('type' => 'text'),
        'type' => array('type' => 'text'),
       'street' => array('type' => 'text'),
        'state' => array('type' => 'text'),
        'city' => array('type' => 'text'),
        'lat' => array('type' => 'decimal'),
        'long' => array('type' => 'decimal'),
      ),
    ),
  );
  $operation = array();
  $operation['label'] = 'Geocode an address';
  $operation['parameter']['address'] = array('type' => 'text');
  $operation['result'] = array('type' => 'list<geocoder_result>', 'label' => 'Geocoder result');
  $service->operations['geocode_address'] = $operation;
  $services[$service->name] = $service;

  // Twitter search service (REST)
  $service = new WSClientServiceDescription();
  $service->name = 'twitter_search';
  $service->label = 'Twitter Search';
  $service->url = 'http://search.twitter.com/search.json';
  $service->type = 'rest';

  $service->datatypes = array(
    'result' => array(
      'label' => 'Search result',
      'property info' => array(
        'results' => array(
          'type' => 'list<tweet>',
          'label' => 'Tweet list',
        ),
      ),
    ),
    'tweet' => array(
      'label' => 'Tweet data',
      'property info' => array(
        'text' => array(
          'type' => 'text',
          'label' => 'Tweet text',
        ),
      ),
    ),
  );
  $operation = array();
  $operation['label'] = 'Search';
  $operation['parameter']['q'] = array('type' => 'text', 'label' => 'Search text');
  $operation['result'] = array('type' => 'wsclient_twitter_search_result', 'label' => 'Search result');
  $service->operations['search'] = $operation;
  $services[$service->name] = $service;

  return $services;
}
