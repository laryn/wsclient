<?php
// $Id$

/**
 * @file
 * Web service client REST test case.
 */

class WSClientRESTTestCase extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => 'Web service client REST',
      'description' => 'Tests invoking a RESTful service.',
      'group' => 'Services',
    );
  }

  function setUp() {
    parent::setUp('wsclient_rest_test');
  }

  /**
   * Tests invoking the google translation service.
   */
  function testServiceInvocation() {
    $service = wsclient_service_load('google');
    $result = $service->translate('Hallo Welt', 'de|en');
    $this->assertEqual(drupal_strtolower($result['translatedText']), 'hello world', 'REST service invocation was successful.');
  }
}

class WSClientRESTRulesTestCase extends DrupalWebTestCase {

  static function getInfo() {
    return array(
      'name' => 'Web service client REST Rules',
      'description' => 'Tests the Rules integration of the REST endpoint.',
      'group' => 'Services',
    );
  }

  function setUp() {
    parent::setUp('rules', 'wsclient_rest_test');
  }

  /**
   * Tests invoking the google translation service.
   */
  function testRulesIntegration() {
    list($result) = rules_action('wsclient_google_translate', array(
           'param_langpair' => 'de|en',
         ))->execute('Hallo Welt');
    $this->assertEqual(drupal_strtolower($result['translatedText']), 'hello world', 'REST service invoked via the action.');

    // Test making use of the provided variable.
    $rule = rule(array('text' => array('type' => 'text')));
    $rule->action('wsclient_google_translate', array(
           'param_q:select' => 'text',
           'param_langpair' => 'de|en',
         ))
         ->action('drupal_message', array('message:select' => 'responsedata:translatedText'))
         ->execute('Hallo Welt');
    RulesLog::logger()->checkLog();
    $msg = drupal_get_messages();
    $this->assertEqual(drupal_strtolower(array_pop($msg['status'])), 'hello world', 'REST service has been invoked.');
  }

}
